{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/MyTimer/MyStopwatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MyStopwatch.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyStopwatch = ({\n  setStartFunction,\n  setStopFunction\n}) => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  console.log(\"Interval ID:\", intervalId);\n  useEffect(() => {\n    if (setStartFunction && setStopFunction) {\n      setStartFunction(() => start);\n      setStopFunction(() => stop);\n    }\n  }, [setStartFunction, setStopFunction]);\n  const start = () => {\n    if (!intervalId) {\n      console.log(\"Timer started\");\n      const id = setInterval(() => {\n        setTime(prev => prev + 1);\n        console.log(\"Current time:\", time); // Debug log to check if time is updating\n      }, 1000);\n      setIntervalId(id);\n    }\n  };\n  const stop = () => {\n    console.log(\"Stopping timer\");\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n  };\n  const formatTime = () => {\n    console.log(\"Current time:\", time); // Debug log to check time updates\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor(time % 3600 / 60);\n    const seconds = time % 60;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [String(hours).padStart(2, '0'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [String(minutes).padStart(2, '0'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: String(seconds).padStart(2, '0')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-div\",\n    children: formatTime()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(MyStopwatch, \"3Hcwrv8Q55yRMSl0WXcuE81m8Jk=\");\n_c = MyStopwatch;\nexport default MyStopwatch;\nvar _c;\n$RefreshReg$(_c, \"MyStopwatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","MyStopwatch","setStartFunction","setStopFunction","_s","time","setTime","intervalId","setIntervalId","console","log","start","stop","id","setInterval","prev","clearInterval","formatTime","hours","Math","floor","minutes","seconds","children","String","padStart","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/MyTimer/MyStopwatch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MyStopwatch.css';\n\nconst MyStopwatch = ({ setStartFunction, setStopFunction }) => {\n  const [time, setTime] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n\n  console.log(\"Interval ID:\", intervalId);\n\n  useEffect(() => {\n    if (setStartFunction && setStopFunction) {\n      setStartFunction(() => start);\n      setStopFunction(() => stop);\n    }\n  }, [setStartFunction, setStopFunction]);\n\n  const start = () => {\n    if (!intervalId) {\n      console.log(\"Timer started\");\n      const id = setInterval(() => {\n        setTime((prev) => prev + 1);\n        console.log(\"Current time:\", time); // Debug log to check if time is updating\n      }, 1000);\n      setIntervalId(id);\n    }\n  };\n  const stop = () => {\n    console.log(\"Stopping timer\");\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n  };\n\n  const formatTime = () => {\n    console.log(\"Current time:\", time); // Debug log to check time updates\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor((time % 3600) / 60);\n    const seconds = time % 60;\n\n    return (\n      <>\n        <span>{String(hours).padStart(2, '0')}:</span>\n        <span>{String(minutes).padStart(2, '0')}:</span>\n        <span>{String(seconds).padStart(2, '0')}</span>\n      </>\n    );\n  };\n\n  return <div className=\"timer-div\">{formatTime()}</div>;\n};\n\nexport default MyStopwatch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}