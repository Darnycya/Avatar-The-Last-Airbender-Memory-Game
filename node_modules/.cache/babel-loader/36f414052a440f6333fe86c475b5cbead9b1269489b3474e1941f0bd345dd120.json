{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createElement as _createElement } from 'react';\nimport Card from '../Card/Card';\nimport './Board.css';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = props => {\n  _s();\n  const [cards, setCards] = useState(props.cards);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n\n  // Helper Functions\n  const validateCheckers = checkers => checkers.length === 2 && checkers[0].type === checkers[1].type;\n  const cardAlreadyInCheckers = (checkers, card) => checkers.length === 1 && checkers[0].id === card.id;\n  const checkersFull = checkers => checkers.length === 2;\n  const resetCheckersAfter = time => {\n    setTimeout(() => setCheckers([]), time);\n  };\n  const resetCompletedAfter = time => {\n    setTimeout(() => setCompleted([]), time);\n  };\n\n  // Handle Card Click\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    if (validateCheckers(newCheckers)) {\n      setCompleted([...completed, newCheckers[0].type]);\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n    if (completed.length === 12) {\n      resetCompletedAfter(4000);\n      toggle();\n    }\n  };\n\n  // Update Cards State\n  useEffect(() => {\n    const updatedCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(updatedCards);\n  }, [checkers, completed, cards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: cards.map(card => /*#__PURE__*/_createElement(Card, {\n        ...card,\n        onClick: onCardClick(card),\n        key: card.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isShowing: isShowing,\n      hide: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"dNBhRR5LKqyj9MhpNTHzq1F2i4w=\", false, function () {\n  return [useModal];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","createElement","_createElement","Card","Modal","useModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","props","_s","cards","setCards","checkers","setCheckers","completed","setCompleted","isShowing","toggle","validateCheckers","length","type","cardAlreadyInCheckers","card","id","checkersFull","resetCheckersAfter","time","setTimeout","resetCompletedAfter","onCardClick","newCheckers","updatedCards","map","flipped","find","c","includes","children","className","onClick","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","hide","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport './Board.css';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\n\nconst Board = (props) => {\n  const [cards, setCards] = useState(props.cards);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const { isShowing, toggle } = useModal();\n\n  // Helper Functions\n  const validateCheckers = (checkers) =>\n    checkers.length === 2 && checkers[0].type === checkers[1].type;\n\n  const cardAlreadyInCheckers = (checkers, card) =>\n    checkers.length === 1 && checkers[0].id === card.id;\n\n  const checkersFull = (checkers) => checkers.length === 2;\n\n  const resetCheckersAfter = (time) => {\n    setTimeout(() => setCheckers([]), time);\n  };\n\n  const resetCompletedAfter = (time) => {\n    setTimeout(() => setCompleted([]), time);\n  };\n\n  // Handle Card Click\n  const onCardClick = (card) => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n\n    if (validateCheckers(newCheckers)) {\n      setCompleted([...completed, newCheckers[0].type]);\n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n\n    if (completed.length === 12) {\n      resetCompletedAfter(4000);\n      toggle();\n    }\n  };\n\n  // Update Cards State\n  useEffect(() => {\n    const updatedCards = cards.map((card) => ({\n      ...card,\n      flipped: checkers.find((c) => c.id === card.id) || completed.includes(card.type),\n    }));\n    setCards(updatedCards);\n  }, [checkers, completed, cards]);\n\n  return (\n    <>\n      <div className=\"Board\">\n        {cards.map((card) => (\n          <Card {...card} onClick={onCardClick(card)} key={card.id} />\n        ))}\n      </div>\n      <Modal isShowing={isShowing} hide={toggle} />\n    </>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}