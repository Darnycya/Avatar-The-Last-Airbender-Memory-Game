{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\";\nimport React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport './Board.css';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport Nav from '../Nav/Nav';\nimport { useStopwatch } from 'react-timer-hook';\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    reset\n  } = useStopwatch({\n    autoStart: true\n  });\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n\n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type]);\n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n\n    if (completed.length >= 11) {\n      resetCompletedAfter(4000);\n      toggle();\n    }\n\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n        setCompleted([]);\n      }, time);\n    }\n\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n  };\n\n  useEffect(() => {\n    const newCards = cards.map(card => ({ ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(newCards);\n  }, [checkers, completed]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, cards.map(card => /*#__PURE__*/React.createElement(Card, Object.assign({}, card, {\n    onClick: onCardClick(card),\n    key: card.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isShowing: isShowing,\n    hide: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"names":["React","useState","useEffect","Card","Modal","useModal","Nav","useStopwatch","Board","props","cards","setCards","checkers","setCheckers","completed","setCompleted","seconds","minutes","hours","days","isRunning","start","pause","reset","autoStart","isShowing","toggle","onCardClick","card","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","type","resetCheckersAfter","length","resetCompletedAfter","time","setTimeout","id","newCards","map","flipped","find","c","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport './Board.css';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport Nav from '../Nav/Nav';\nimport { useStopwatch } from 'react-timer-hook';\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards)\n  const [checkers, setCheckers] = useState([])\n  const [completed, setCompleted] = useState([])\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    reset,\n  } = useStopwatch({ autoStart: true });\n\n\n  const {isShowing, toggle} = useModal();\n\n  \n\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card))\n      return\n    const newCheckers = [...checkers, card]\n    setCheckers(newCheckers)\n    const cardsInCheckersMatched = validateCheckers(newCheckers)\n    \n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type])\n      \n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000)\n    }\n \n    \n      if (completed.length >= 11) {\n        resetCompletedAfter(4000)\n        toggle();\n      }\n    \n    \n\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n     setCompleted([])\n   }, time)\n    }\n    \n   \n\n    function validateCheckers(checkers){\n      return checkers.length === 2 &&\n      checkers[0].type === checkers[1].type\n    }\n\n    function cardAlreadyInCheckers(checkers, card){\n      return checkers.length === 1 && checkers[0].id === card.id\n    }\n\n    function checkersFull(checkers){\n      return checkers.length === 2\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([])\n      }, time)\n    }\n  }\n\n  \n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped:\n        checkers.find(c => c.id === card.id) ||\n        completed.includes(card.type),\n    }))\n    setCards(newCards)\n  }, [checkers, completed])\n  \n\n  \n  \n\n\n\n\n  return (\n    <>\n      \n    <Nav />\n    <div className=\"Board\">\n      {cards.map(card => (\n        <Card {...card}  onClick={onCardClick(card)} key={card.id} />\n      ))}\n      </div>\n\n      <div className=\"App\">\n      <Modal\n        isShowing={isShowing}\n        hide={toggle}\n      />\n      </div>\n      \n      </>\n  )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}