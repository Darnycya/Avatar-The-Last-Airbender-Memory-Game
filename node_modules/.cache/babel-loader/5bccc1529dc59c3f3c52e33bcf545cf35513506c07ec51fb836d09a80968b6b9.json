{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createElement as _createElement } from 'react';\nimport Card from '../Card/Card';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport './Board.css';\nimport Appa from '../../Assets/Images/Appa.png';\nimport Katara from '../../Assets/Images/Katara.jpeg';\nimport PrinceZuko from '../../Assets/Images/Prince_Zuko.jpg';\nimport Sokka from '../../Assets/Images/Sokka.png';\nimport Toph from '../../Assets/Images/Toph.jpg';\nimport Aang from '../../Assets/Images/Aang.jpg';\nimport backImg from '../../Assets/Images/Logo.jpg';\nimport Iroh_smiling from '../../Assets/Images/Iroh_smiling.png';\nimport Mai from '../../Assets/Images/Mai.png';\nimport momo from '../../Assets/Images/momo.jpg';\nimport Tylee from '../../Assets/Images/Tylee.png';\nimport Azulaa from '../../Assets/Images/Azulaa.png';\nimport Bumi from '../../Assets/Images/Bumi.jpeg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  startTimer,\n  isGameStarted,\n  stopTimer,\n  setIsGameStarted,\n  resumeTimer,\n  isPaused,\n  setTime\n}) => {\n  _s();\n  const deck = buildCards();\n  const [cards, setCards] = useState(deck);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [isGameCompleted, setIsGameCompleted] = useState(false);\n  const onCardClick = card => () => {\n    if (!isGameStarted) {\n      startTimer();\n      setIsGameStarted(true);\n    } else if (isPaused) {\n      resumeTimer();\n    }\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n    if (cardsInCheckersMatched) {\n      setCompleted(prev => [...prev, newCheckers[0].type]);\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n  };\n  const openModal = () => {\n    toggle(); // Open the modal\n  };\n  const handleModalClose = () => {\n    const resetCards = cards.map(card => ({\n      ...card,\n      flipped: false\n    }));\n    setCards(resetCards);\n    setCompleted([]);\n    setCheckers([]);\n    setIsGameCompleted(false);\n    toggle(); // \n  };\n\n  // Build Cards Function\n  function buildCards() {\n    let id = 0;\n    const images = {\n      Aang,\n      Appa\n    };\n    const cards = Object.keys(images).reduce((result, item) => {\n      const getCard = () => ({\n        id: id++,\n        type: item,\n        backImg,\n        frontImg: images[item],\n        flipped: false\n      });\n      return [...result, getCard(), getCard()];\n    }, []);\n    return shuffle(cards);\n  }\n\n  // Shuffle Function\n  function shuffle(arr) {\n    let len = arr.length;\n    for (let i = 0; i < len; i++) {\n      let randomIdx = Math.floor(Math.random() * len);\n      let copyCurrent = {\n        ...arr[i]\n      };\n      let copyRandom = {\n        ...arr[randomIdx]\n      };\n      arr[i] = copyRandom;\n      arr[randomIdx] = copyCurrent;\n    }\n    return arr;\n  }\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(newCards);\n    if (completed.length === 2 && !isGameCompleted) {\n      setIsGameCompleted(true);\n      stopTimer();\n      openModal();\n    }\n\n    // eslint-disable-next-line\n  }, [checkers, completed]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: cards.map(card => /*#__PURE__*/_createElement(Card, {\n        ...card,\n        onClick: onCardClick(card),\n        key: card.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isShowing: isShowing,\n        hide: handleModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"y5B6M3HaVYWnzWzDZJ7ZcLMEv/M=\", false, function () {\n  return [useModal];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","createElement","_createElement","Card","Modal","useModal","Appa","Katara","PrinceZuko","Sokka","Toph","Aang","backImg","Iroh_smiling","Mai","momo","Tylee","Azulaa","Bumi","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","startTimer","isGameStarted","stopTimer","setIsGameStarted","resumeTimer","isPaused","setTime","_s","deck","buildCards","cards","setCards","checkers","setCheckers","completed","setCompleted","isShowing","toggle","isGameCompleted","setIsGameCompleted","onCardClick","card","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","prev","type","resetCheckersAfter","time","setTimeout","length","id","openModal","handleModalClose","resetCards","map","flipped","images","Object","keys","reduce","result","item","getCard","frontImg","shuffle","arr","len","i","randomIdx","Math","floor","random","copyCurrent","copyRandom","newCards","find","c","includes","children","className","onClick","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","hide","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport './Board.css';\nimport Appa from '../../Assets/Images/Appa.png';\nimport Katara from '../../Assets/Images/Katara.jpeg';\nimport PrinceZuko from '../../Assets/Images/Prince_Zuko.jpg';\nimport Sokka from '../../Assets/Images/Sokka.png';\nimport Toph from '../../Assets/Images/Toph.jpg';\nimport Aang from '../../Assets/Images/Aang.jpg';\nimport backImg from '../../Assets/Images/Logo.jpg';\nimport Iroh_smiling from '../../Assets/Images/Iroh_smiling.png';\nimport Mai from '../../Assets/Images/Mai.png';\nimport momo from '../../Assets/Images/momo.jpg';\nimport Tylee from '../../Assets/Images/Tylee.png';\nimport Azulaa from '../../Assets/Images/Azulaa.png';\nimport Bumi from '../../Assets/Images/Bumi.jpeg';\n\nconst Board = ({ startTimer, isGameStarted, stopTimer, setIsGameStarted, resumeTimer, isPaused, setTime }) => {\n  const deck = buildCards();\n  const [cards, setCards] = useState(deck);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const { isShowing, toggle } = useModal();\n  const [isGameCompleted, setIsGameCompleted] = useState(false); \n\n  const onCardClick = card => () => {\n\n    if (!isGameStarted) {\n      startTimer(); \n      setIsGameStarted(true); \n    } else if (isPaused) {\n      resumeTimer();\n    }\n\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n\n    if (cardsInCheckersMatched) {\n      setCompleted(prev => [...prev, newCheckers[0].type]);\n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n  };\n\n  const openModal = () => {\n    toggle(); // Open the modal\n  };\n\n  const handleModalClose = () => {\n    const resetCards = cards.map(card => ({\n      ...card,\n      flipped: false,\n    }));\n    setCards(resetCards);\n    setCompleted([]); \n    setCheckers([]); \n    setIsGameCompleted(false); \n    toggle(); // \n  };\n\n  // Build Cards Function\n  function buildCards() {\n    let id = 0;\n    const images = {\n      Aang, Appa\n    };\n    const cards = Object.keys(images).reduce((result, item) => {\n      const getCard = () => ({\n        id: id++,\n        type: item,\n        backImg,\n        frontImg: images[item],\n        flipped: false,\n      });\n      return [...result, getCard(), getCard()];\n    }, []);\n    return shuffle(cards);\n  }\n\n  // Shuffle Function\n  function shuffle(arr) {\n    let len = arr.length;\n    for (let i = 0; i < len; i++) {\n      let randomIdx = Math.floor(Math.random() * len);\n      let copyCurrent = { ...arr[i] };\n      let copyRandom = { ...arr[randomIdx] };\n      arr[i] = copyRandom;\n      arr[randomIdx] = copyCurrent;\n    }\n    return arr;\n  }\n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type),\n    }));\n    setCards(newCards);\n\n    if (completed.length === 2 && !isGameCompleted) {\n      setIsGameCompleted(true); \n      stopTimer();\n      openModal(); \n    }\n\n    // eslint-disable-next-line\n  }, [checkers, completed]);\n\n  return (\n    <>\n      <div className=\"Board\">\n        {cards.map(card => (\n          <Card {...card} onClick={onCardClick(card)} key={card.id} />\n        ))}\n      </div>\n\n      <div className=\"App\">\n        <Modal isShowing={isShowing} hide={handleModalClose} />\n      </div>\n    </>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}