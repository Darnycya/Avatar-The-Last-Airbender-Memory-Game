{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Route } from \"react-router-dom\";\nimport Nav from \"./Components/Nav/Nav\";\nimport Main from \"./Main\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputName, setinputName] = useState({\n    name: ''\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AVATAR: THE LAST AIRBENDER MEMORY GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"objective\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"To be played on Desktop or Tablet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Objective: Click a card to flip it over and click another to try to find its match. Once you have found all pairs you have won the game. You can also use the timer to see how fast you can complete the game.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputName.inputName,\n            onChange: e => setinputName({\n              ...inputName,\n              name: e.target.value\n            }),\n            placeholder: \"Enter name\",\n            className: \"player-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/gamepage\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"homepage-button\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"button-font\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/gamepage\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        ...inputName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"waGwdP5gKmwfONPp15sEGibND/w=\");\n_c = App;\n;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Link","Route","Nav","Main","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputName","setinputName","name","children","path","exact","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","to","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Route } from \"react-router-dom\";\nimport Nav from \"./Components/Nav/Nav\"\nimport Main from \"./Main\";\nimport './App.css'\n\nexport default function App() {\n  const [inputName, setinputName] = useState({\n    name: ''\n  });\n\n    return (\n      <>\n        <Route path=\"/\" exact>\n       <div className=\"main\">\n        <h1>AVATAR: THE LAST AIRBENDER MEMORY GAME</h1>\n        <div className=\"objective\">\n        <p><i>To be played on Desktop or Tablet.</i></p>\n          <p> Objective: Click a card to flip it over and click another to try to find its match. Once you have found all pairs you have won the game. You can also use the timer to see how fast you can complete the game.</p>\n          <input type=\"text\" value={inputName.inputName} onChange={(e) => setinputName({...inputName, name: e.target.value})} placeholder=\"Enter name\" className=\"player-name\"/>\n          <Link to=\"/gamepage\"><button className=\"homepage-button\"><p className=\"button-font\">Submit</p></button></Link>\n        </div>\n        </div>\n        </Route>\n        <Route path=\"/gamepage\">\n          <Nav {...inputName}/>\n          <Main />\n\n        </Route>\n      \n      </>\n    );\n};\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}