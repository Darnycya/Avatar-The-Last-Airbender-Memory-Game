{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createElement as _createElement } from 'react';\nimport Card from '../Card/Card';\nimport './Board.css';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = props => {\n  _s();\n  const [cards, setCards] = useState(props.cards);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n    console.log('checkersFull', checkersFull(newCheckers));\n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type]);\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n    if (completed.length === 12) {\n      resetCompletedAfter(4000);\n      toggle();\n    }\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n        setCompleted([]);\n      }, time);\n    }\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n  };\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(newCards);\n    // eslint-disable-next-line\n  }, [checkers, completed]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: cards.map(card => /*#__PURE__*/_createElement(Card, {\n        ...card,\n        onClick: onCardClick(card),\n        key: card.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isShowing: isShowing,\n        hide: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"oJJLdn889Cjs9h85eOrRuYPOi1w=\", false, function () {\n  return [useModal];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","createElement","_createElement","Card","Modal","useModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","props","_s","cards","setCards","checkers","setCheckers","completed","setCompleted","isTimerStarted","setIsTimerStarted","isShowing","toggle","onCardClick","card","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","console","log","type","resetCheckersAfter","length","resetCompletedAfter","time","setTimeout","id","newCards","map","flipped","find","c","includes","children","className","onClick","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","hide","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport './Board.css';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards)\n  const [checkers, setCheckers] = useState([])\n  const [completed, setCompleted] = useState([])\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n\n\n  const { isShowing, toggle } = useModal();\n\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card))\n      return\n    const newCheckers = [...checkers, card]\n    setCheckers(newCheckers)\n    const cardsInCheckersMatched = validateCheckers(newCheckers)\n    console.log('checkersFull', checkersFull(newCheckers))\n    \n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type])\n      \n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000)\n    }\n \n    \n      if (completed.length === 12) {\n        resetCompletedAfter(4000)\n        toggle();\n      }\n    \n    \n\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n     setCompleted([])\n   }, time)\n    }\n    \n   \n\n    function validateCheckers(checkers){\n      return checkers.length === 2 &&\n      checkers[0].type === checkers[1].type\n    }\n\n    function cardAlreadyInCheckers(checkers, card){\n      return checkers.length === 1 && checkers[0].id === card.id\n    }\n\n    function checkersFull(checkers){\n      return checkers.length === 2\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([])\n      }, time)\n    }\n  }\n\n  \n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped:\n        checkers.find(c => c.id === card.id) ||\n        completed.includes(card.type),\n    }))\n    setCards(newCards)\n    // eslint-disable-next-line\n  }, [checkers, completed])\n  \n\n  \n  \n\n\n\n\n  return (\n    <>\n    <div className=\"Board\">\n      {cards.map(card => (\n        <Card {...card} onClick={onCardClick(card)} key={card.id} />\n      ))}\n      </div>\n\n      <div className=\"App\">\n      <Modal\n        isShowing={isShowing}\n        hide={toggle}\n      />\n      </div>\n      </>\n  )\n}\n\nexport default Board"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}