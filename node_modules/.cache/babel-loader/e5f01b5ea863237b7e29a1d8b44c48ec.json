{"ast":null,"code":"import _objectSpread from\"/Users/darnycyasmith/general_assembly/Avatar-The-Last-Airbender-Memory-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/darnycyasmith/general_assembly/Avatar-The-Last-Airbender-Memory-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/darnycyasmith/general_assembly/Avatar-The-Last-Airbender-Memory-Game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Card from'../Card/Card';import'./Board.css';var Board=function Board(props){var _useState=useState(props.cards),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),checkers=_useState4[0],setCheckers=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),completed=_useState6[0],setCompleted=_useState6[1];var onCardClick=function onCardClick(card){return function(){if(checkersFull(checkers)||cardAlreadyInCheckers(checkers,card))return;var newCheckers=[].concat(_toConsumableArray(checkers),[card]);setCheckers(newCheckers);var cardsInCheckersMatched=validateCheckers(newCheckers);if(cardsInCheckersMatched){setCompleted([].concat(_toConsumableArray(completed),[newCheckers[0].type]));}if(checkersFull(newCheckers)){resetCheckersAfter(1000);}function validateCheckers(checkers){return checkers.length===2&&checkers[0].type===checkers[1].type;}function cardAlreadyInCheckers(checkers,card){return checkers.length===1&&checkers[0].id===card.id;}function checkersFull(checkers){return checkers.length===2;}function resetCheckersAfter(time){setTimeout(function(){setCheckers([]);},time);}};};useEffect(function(){var newCards=cards.map(function(card){return _objectSpread(_objectSpread({},card),{},{flipped:checkers.find(function(c){return c.id===card.id;})||completed.includes(card.type)});});setCards(newCards);},[checkers,completed]);return/*#__PURE__*/React.createElement(\"div\",{className:\"Board\"},cards.map(function(card){return/*#__PURE__*/React.createElement(Card,Object.assign({},card,{onClick:onCardClick(card),key:card.id}));}));};export default Board;","map":{"version":3,"sources":["/Users/darnycyasmith/general_assembly/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"names":["React","useState","useEffect","Card","Board","props","cards","setCards","checkers","setCheckers","completed","setCompleted","onCardClick","card","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","type","resetCheckersAfter","length","id","time","setTimeout","newCards","map","flipped","find","c","includes"],"mappings":"6kBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAO,aAAP,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,CAAI,eACKJ,QAAQ,CAACI,KAAK,CAACC,KAAP,CADb,wCACdA,KADc,eACPC,QADO,8BAEWN,QAAQ,CAAC,EAAD,CAFnB,yCAEdO,QAFc,eAEJC,WAFI,8BAGaR,QAAQ,CAAC,EAAD,CAHrB,yCAGdS,SAHc,eAGHC,YAHG,eAIrB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,IAAI,QAAI,WAAM,CAChC,GAAIC,YAAY,CAACN,QAAD,CAAZ,EAA0BO,qBAAqB,CAACP,QAAD,CAAWK,IAAX,CAAnD,CAAqE,OACrE,GAAMG,CAAAA,WAAW,8BAAOR,QAAP,GAAiBK,IAAjB,EAAjB,CACAJ,WAAW,CAACO,WAAD,CAAX,CACA,GAAMC,CAAAA,sBAAsB,CAAGC,gBAAgB,CAACF,WAAD,CAA/C,CACA,GAAIC,sBAAJ,CAA4B,CAC1BN,YAAY,8BAAKD,SAAL,GAAgBM,WAAW,CAAC,CAAD,CAAX,CAAeG,IAA/B,GAAZ,CACD,CACD,GAAIL,YAAY,CAACE,WAAD,CAAhB,CAA+B,CAC7BI,kBAAkB,CAAC,IAAD,CAAlB,CACD,CACD,QAASF,CAAAA,gBAAT,CAA0BV,QAA1B,CAAmC,CACjC,MAAOA,CAAAA,QAAQ,CAACa,MAAT,GAAoB,CAApB,EACPb,QAAQ,CAAC,CAAD,CAAR,CAAYW,IAAZ,GAAqBX,QAAQ,CAAC,CAAD,CAAR,CAAYW,IADjC,CAED,CACD,QAASJ,CAAAA,qBAAT,CAA+BP,QAA/B,CAAyCK,IAAzC,CAA8C,CAC5C,MAAOL,CAAAA,QAAQ,CAACa,MAAT,GAAoB,CAApB,EAAyBb,QAAQ,CAAC,CAAD,CAAR,CAAYc,EAAZ,GAAmBT,IAAI,CAACS,EAAxD,CACD,CACD,QAASR,CAAAA,YAAT,CAAsBN,QAAtB,CAA+B,CAC7B,MAAOA,CAAAA,QAAQ,CAACa,MAAT,GAAoB,CAA3B,CACD,CACD,QAASD,CAAAA,kBAAT,CAA4BG,IAA5B,CAAkC,CAChCC,UAAU,CAAC,UAAM,CACff,WAAW,CAAC,EAAD,CAAX,CACD,CAFS,CAEPc,IAFO,CAAV,CAGD,CACF,CA1BuB,EAAxB,CA4BArB,SAAS,CAAC,UAAM,CACd,GAAMuB,CAAAA,QAAQ,CAAGnB,KAAK,CAACoB,GAAN,CAAU,SAAAb,IAAI,wCAC1BA,IAD0B,MAE7Bc,OAAO,CACLnB,QAAQ,CAACoB,IAAT,CAAc,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACP,EAAF,GAAST,IAAI,CAACS,EAAlB,EAAf,GACAZ,SAAS,CAACoB,QAAV,CAAmBjB,IAAI,CAACM,IAAxB,CAJ2B,IAAd,CAAjB,CAMAZ,QAAQ,CAACkB,QAAD,CAAR,CACD,CARQ,CAQN,CAACjB,QAAD,CAAWE,SAAX,CARM,CAAT,CAUA,mBACE,2BAAK,SAAS,CAAC,OAAf,EACGJ,KAAK,CAACoB,GAAN,CAAU,SAAAb,IAAI,qBACb,oBAAC,IAAD,kBAAUA,IAAV,EAAgB,OAAO,CAAED,WAAW,CAACC,IAAD,CAApC,CAA4C,GAAG,CAAEA,IAAI,CAACS,EAAtD,GADa,EAAd,CADH,CADF,CAOD,CAjDD,CAmDA,cAAelB,CAAAA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Card from '../Card/Card'\nimport './Board.css'\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards)\n  const [checkers, setCheckers] = useState([])\n  const [completed, setCompleted] = useState([])\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return\n    const newCheckers = [...checkers, card]\n    setCheckers(newCheckers)\n    const cardsInCheckersMatched = validateCheckers(newCheckers)\n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type])\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000)\n    }\n    function validateCheckers(checkers){\n      return checkers.length === 2 &&\n      checkers[0].type === checkers[1].type\n    }\n    function cardAlreadyInCheckers(checkers, card){\n      return checkers.length === 1 && checkers[0].id === card.id\n    }\n    function checkersFull(checkers){\n      return checkers.length === 2\n    }\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([])\n      }, time)\n    }\n  }\n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped:\n        checkers.find(c => c.id === card.id) ||\n        completed.includes(card.type),\n    }))\n    setCards(newCards)\n  }, [checkers, completed])\n\n  return (\n    <div className=\"Board\">\n      {cards.map(card => (\n        <Card {...card} onClick={onCardClick(card)} key={card.id} />\n      ))}\n    </div>\n  )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}