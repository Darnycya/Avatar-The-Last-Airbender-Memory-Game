{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\";\nimport React, { useState, useEffect } from 'react'; // import Header from '../Header/Header'\n\nimport Card from '../Card/Card';\nimport './Board.css';\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n\n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type]);\n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n\n    if (completed.length > 10) {\n      resetCompletedAfter(5000);\n    }\n\n    console.log(completed);\n\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n        setCompleted([]);\n      }, time);\n    }\n\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n  };\n\n  useEffect(() => {\n    const newCards = cards.map(card => ({ ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(newCards);\n  }, [checkers, completed]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, cards.map(card => /*#__PURE__*/React.createElement(Card, Object.assign({}, card, {\n    onClick: onCardClick(card),\n    key: card.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"names":["React","useState","useEffect","Card","Board","props","cards","setCards","checkers","setCheckers","completed","setCompleted","onCardClick","card","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","type","resetCheckersAfter","length","resetCompletedAfter","console","log","time","setTimeout","id","newCards","map","flipped","find","c","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// import Header from '../Header/Header'\nimport Card from '../Card/Card'\nimport './Board.css'\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards)\n  const [checkers, setCheckers] = useState([])\n  const [completed, setCompleted] = useState([])\n\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card))\n      return\n    const newCheckers = [...checkers, card]\n    setCheckers(newCheckers)\n    const cardsInCheckersMatched = validateCheckers(newCheckers)\n    \n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type])\n      \n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000)\n    }\n\n    if (completed.length > 10) {\n      resetCompletedAfter(5000)\n    }\n\n console.log(completed)\n\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n     setCompleted([])\n   }, time)\n }\n\n    function validateCheckers(checkers){\n      return checkers.length === 2 &&\n      checkers[0].type === checkers[1].type\n    }\n\n    function cardAlreadyInCheckers(checkers, card){\n      return checkers.length === 1 && checkers[0].id === card.id\n    }\n\n    function checkersFull(checkers){\n      return checkers.length === 2\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([])\n      }, time)\n    }\n  }\n\n  \n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped:\n        checkers.find(c => c.id === card.id) ||\n        completed.includes(card.type),\n    }))\n    setCards(newCards)\n  }, [checkers, completed])\n\n \n\n  return (\n    <>\n       {/* <Header /> */}\n    <div className=\"Board\">\n      {cards.map(card => (\n        <Card {...card} onClick={onCardClick(card)} key={card.id} />\n      ))}\n      </div>\n      </>\n  )\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}