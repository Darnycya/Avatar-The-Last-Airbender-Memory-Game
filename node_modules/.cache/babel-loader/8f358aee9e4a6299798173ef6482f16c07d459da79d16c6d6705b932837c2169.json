{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createElement as _createElement } from 'react';\nimport Card from '../Card/Card';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport './Board.css';\nimport Appa from '../../Assets/Images/Appa.png';\nimport Katara from '../../Assets/Images/Katara.jpeg';\nimport PrinceZuko from '../../Assets/Images/Prince_Zuko.jpg';\nimport Sokka from '../../Assets/Images/Sokka.png';\nimport Toph from '../../Assets/Images/Toph.jpg';\nimport Aang from '../../Assets/Images/Aang.jpg';\nimport backImg from '../../Assets/Images/Logo.jpg';\nimport Iroh_smiling from '../../Assets/Images/Iroh_smiling.png';\nimport Mai from '../../Assets/Images/Mai.png';\nimport momo from '../../Assets/Images/momo.jpg';\nimport Tylee from '../../Assets/Images/Tylee.png';\nimport Azulaa from '../../Assets/Images/Azulaa.png';\nimport Bumi from '../../Assets/Images/Bumi.jpeg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = props => {\n  _s();\n  const deck = buildCards();\n  const [cards, setCards] = useState(deck);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const [isGameCompleted, setIsGameCompleted] = useState(false); // Track game completion\n\n  const onCardClick = card => () => {\n    if (!isTimerStarted) {\n      setIsTimerStarted(true);\n      if (props.startTimer) {\n        props.startTimer();\n      } else {\n        console.error(\"startTimer is not defined in props\");\n      }\n    }\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n    if (cardsInCheckersMatched) {\n      setCompleted(prev => [...prev, newCheckers[0].type]);\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n    if (completed.length === 12 && !isGameCompleted) {\n      setIsGameCompleted(true); // Set game completion flag\n      openModal(); // Show the modal when all cards are correct\n      if (props.stopTimer) {\n        props.stopTimer(); // Stop the timer if `stopTimer` is passed as a prop\n      }\n    }\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n  };\n  const openModal = () => {\n    toggle(); // Open the modal\n  };\n  const handleModalClose = () => {\n    const resetCards = cards.map(card => ({\n      ...card,\n      flipped: false\n    }));\n    setCards(resetCards);\n    setCompleted([]); // Reset completed matches\n    setCheckers([]); // Reset checkers\n    setIsTimerStarted(false); // Reset timer state\n    setIsGameCompleted(false); // Reset game completion flag\n    toggle(); // Close the modal\n  };\n\n  // Build Cards Function\n  function buildCards() {\n    let id = 0;\n    const images = {\n      Aang,\n      Appa,\n      Katara,\n      PrinceZuko,\n      Sokka,\n      Toph,\n      Iroh_smiling,\n      Mai,\n      momo,\n      Tylee,\n      Azulaa,\n      Bumi\n    };\n    const cards = Object.keys(images).reduce((result, item) => {\n      const getCard = () => ({\n        id: id++,\n        type: item,\n        backImg,\n        frontImg: images[item],\n        flipped: false\n      });\n      return [...result, getCard(), getCard()];\n    }, []);\n    return shuffle(cards);\n  }\n\n  // Shuffle Function\n  function shuffle(arr) {\n    let len = arr.length;\n    for (let i = 0; i < len; i++) {\n      let randomIdx = Math.floor(Math.random() * len);\n      let copyCurrent = {\n        ...arr[i]\n      };\n      let copyRandom = {\n        ...arr[randomIdx]\n      };\n      arr[i] = copyRandom;\n      arr[randomIdx] = copyCurrent;\n    }\n    return arr;\n  }\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(newCards);\n\n    // eslint-disable-next-line\n  }, [checkers, completed, isGameCompleted]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: cards.map(card => /*#__PURE__*/_createElement(Card, {\n        ...card,\n        onClick: onCardClick(card),\n        key: card.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isShowing: isShowing,\n        hide: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"rDYMWD5Lv50PpZuig75KILhKRvs=\", false, function () {\n  return [useModal];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","createElement","_createElement","Card","Modal","useModal","Appa","Katara","PrinceZuko","Sokka","Toph","Aang","backImg","Iroh_smiling","Mai","momo","Tylee","Azulaa","Bumi","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","props","_s","deck","buildCards","cards","setCards","checkers","setCheckers","completed","setCompleted","isTimerStarted","setIsTimerStarted","isShowing","toggle","isGameCompleted","setIsGameCompleted","onCardClick","card","startTimer","console","error","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","prev","type","resetCheckersAfter","length","openModal","stopTimer","time","setTimeout","id","handleModalClose","resetCards","map","flipped","images","Object","keys","reduce","result","item","getCard","frontImg","shuffle","arr","len","i","randomIdx","Math","floor","random","copyCurrent","copyRandom","newCards","find","c","includes","children","className","onClick","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","hide","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport './Board.css';\nimport Appa from '../../Assets/Images/Appa.png';\nimport Katara from '../../Assets/Images/Katara.jpeg';\nimport PrinceZuko from '../../Assets/Images/Prince_Zuko.jpg';\nimport Sokka from '../../Assets/Images/Sokka.png';\nimport Toph from '../../Assets/Images/Toph.jpg';\nimport Aang from '../../Assets/Images/Aang.jpg';\nimport backImg from '../../Assets/Images/Logo.jpg';\nimport Iroh_smiling from '../../Assets/Images/Iroh_smiling.png';\nimport Mai from '../../Assets/Images/Mai.png';\nimport momo from '../../Assets/Images/momo.jpg';\nimport Tylee from '../../Assets/Images/Tylee.png';\nimport Azulaa from '../../Assets/Images/Azulaa.png';\nimport Bumi from '../../Assets/Images/Bumi.jpeg';\n\nconst Board = props => {\n  const deck = buildCards();\n  const [cards, setCards] = useState(deck);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n  const { isShowing, toggle } = useModal();\n  const [isGameCompleted, setIsGameCompleted] = useState(false); // Track game completion\n\n  const onCardClick = card => () => {\n    if (!isTimerStarted) {\n      setIsTimerStarted(true);\n      if (props.startTimer) {\n        props.startTimer();\n      } else {\n        console.error(\"startTimer is not defined in props\");\n      }\n    }\n\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n\n    if (cardsInCheckersMatched) {\n      setCompleted(prev => [...prev, newCheckers[0].type]);\n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n\n    if (completed.length === 12 && !isGameCompleted) {\n      setIsGameCompleted(true); // Set game completion flag\n      openModal(); // Show the modal when all cards are correct\n      if (props.stopTimer) {\n        props.stopTimer(); // Stop the timer if `stopTimer` is passed as a prop\n      }\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n  };\n\n  const openModal = () => {\n    toggle(); // Open the modal\n  };\n\n  const handleModalClose = () => {\n    const resetCards = cards.map(card => ({\n      ...card,\n      flipped: false,\n    }));\n    setCards(resetCards);\n    setCompleted([]); // Reset completed matches\n    setCheckers([]); // Reset checkers\n    setIsTimerStarted(false); // Reset timer state\n    setIsGameCompleted(false); // Reset game completion flag\n    toggle(); // Close the modal\n  };\n\n  // Build Cards Function\n  function buildCards() {\n    let id = 0;\n    const images = {\n      Aang, Appa, Katara, PrinceZuko,\n      Sokka, Toph, Iroh_smiling, Mai, momo, Tylee, Azulaa, Bumi,\n    };\n    const cards = Object.keys(images).reduce((result, item) => {\n      const getCard = () => ({\n        id: id++,\n        type: item,\n        backImg,\n        frontImg: images[item],\n        flipped: false,\n      });\n      return [...result, getCard(), getCard()];\n    }, []);\n    return shuffle(cards);\n  }\n\n  // Shuffle Function\n  function shuffle(arr) {\n    let len = arr.length;\n    for (let i = 0; i < len; i++) {\n      let randomIdx = Math.floor(Math.random() * len);\n      let copyCurrent = { ...arr[i] };\n      let copyRandom = { ...arr[randomIdx] };\n      arr[i] = copyRandom;\n      arr[randomIdx] = copyCurrent;\n    }\n    return arr;\n  }\n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type),\n    }));\n    setCards(newCards);\n\n    // eslint-disable-next-line\n  }, [checkers, completed, isGameCompleted]);\n\n  return (\n    <>\n      <div className=\"Board\">\n        {cards.map(card => (\n          <Card {...card} onClick={onCardClick(card)} key={card.id} />\n        ))}\n      </div>\n\n      <div className=\"App\">\n        <Modal isShowing={isShowing} hide={toggle} />\n      </div>\n    </>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}