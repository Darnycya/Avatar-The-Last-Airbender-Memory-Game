{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport Nav from \"./Components/Nav/Nav\";\nimport Board from './Components/Board/Board';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputName, setInputName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName ? {\n      name: savedName\n    } : {\n      name: ''\n    };\n  });\n  const [time, setTime] = useState(0); // Timer state in seconds\n  const [formattedTime, setFormattedTime] = useState('00:00:00'); // Formatted time for display\n  const [isPaused, setIsPaused] = useState(false); // Pause state\n  const [intervalId, setIntervalId] = useState(null); // Timer interval ID\n\n  const [isGameStarted, setIsGameStarted] = useState(false); // Track if game has started\n\n  // Format the time in hh:mm:ss format\n  useEffect(() => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    const hours = Math.floor(minutes / 60);\n    setFormattedTime(`${String(hours).padStart(2, '0')}:${String(minutes % 60).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);\n  }, [time]);\n\n  // Start the timer\n  const startTimer = () => {\n    if (intervalId) return; // Prevent multiple intervals if already running\n    const id = setInterval(() => {\n      setTime(prevTime => prevTime + 1); // Increment time\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  // Pause the timer\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalId); // Stop the interval\n    setIntervalId(null); // Clear the interval ID\n  };\n\n  // Resume the timer\n  const resumeTimer = () => {\n    if (intervalId) return; // Avoid starting a new interval if one is already running\n    setIsPaused(false);\n    startTimer(); // Start a new timer if paused\n  };\n\n  // Stop the timer when game is complete\n  const stopTimer = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  // Store the player name in localStorage\n  useEffect(() => {\n    localStorage.setItem('playerName', inputName.name);\n  }, [inputName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AVATAR: THE LAST AIRBENDER MEMORY GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"objective\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"To be played on Desktop or Tablet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Objective: Click a card to flip it over and click another to try to find its match. Once you have found all pairs, you have won the game. You can also use the timer to see how fast you can complete the game.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputName.name,\n            onChange: e => setInputName({\n              ...inputName,\n              name: e.target.value\n            }),\n            placeholder: \"Enter name\",\n            className: \"player-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/gamepage\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"homepage-button\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"button-font\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/gamepage\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        name: inputName.name,\n        formattedTime: formattedTime,\n        isPaused: isPaused,\n        pauseTimer: pauseTimer,\n        resumeTimer: resumeTimer,\n        time: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        startTimer: startTimer,\n        stopTimer: stopTimer,\n        isGameStarted: isGameStarted,\n        setIsGameStarted: setIsGameStarted,\n        pauseTimer: pauseTimer,\n        isPaused: isPaused,\n        resumeTimer: resumeTimer,\n        setIsPaused: setIsPaused,\n        setTime: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"aonHQCyeqyIqjSOKARTRUNm0w0I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Link","Route","Nav","Board","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputName","setInputName","savedName","localStorage","getItem","name","time","setTime","formattedTime","setFormattedTime","isPaused","setIsPaused","intervalId","setIntervalId","isGameStarted","setIsGameStarted","minutes","Math","floor","seconds","hours","String","padStart","startTimer","id","setInterval","prevTime","pauseTimer","clearInterval","resumeTimer","stopTimer","setItem","children","path","exact","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","to","_c","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport Nav from \"./Components/Nav/Nav\";\nimport Board from './Components/Board/Board';\nimport './App.css';\n\nexport default function App() {\n  const [inputName, setInputName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName ? { name: savedName } : { name: '' };\n  });\n\n  const [time, setTime] = useState(0); // Timer state in seconds\n  const [formattedTime, setFormattedTime] = useState('00:00:00'); // Formatted time for display\n  const [isPaused, setIsPaused] = useState(false); // Pause state\n  const [intervalId, setIntervalId] = useState(null); // Timer interval ID\n\n  const [isGameStarted, setIsGameStarted] = useState(false); // Track if game has started\n\n  // Format the time in hh:mm:ss format\n  useEffect(() => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    const hours = Math.floor(minutes / 60);\n    setFormattedTime(`${String(hours).padStart(2, '0')}:${String(minutes % 60).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`);\n  }, [time]);\n\n  // Start the timer\n  const startTimer = () => {\n    if (intervalId) return; // Prevent multiple intervals if already running\n    const id = setInterval(() => {\n      setTime(prevTime => prevTime + 1); // Increment time\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  // Pause the timer\n  const pauseTimer = () => {\n    setIsPaused(true);\n    clearInterval(intervalId); // Stop the interval\n    setIntervalId(null); // Clear the interval ID\n  };\n\n  // Resume the timer\n  const resumeTimer = () => {\n    if (intervalId) return; // Avoid starting a new interval if one is already running\n    setIsPaused(false);\n    startTimer(); // Start a new timer if paused\n  };\n\n  // Stop the timer when game is complete\n  const stopTimer = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  // Store the player name in localStorage\n  useEffect(() => {\n    localStorage.setItem('playerName', inputName.name);\n  }, [inputName]);\n\n  return (\n    <>\n      <Route path=\"/\" exact>\n        <div className=\"main\">\n          <h1>AVATAR: THE LAST AIRBENDER MEMORY GAME</h1>\n          <div className=\"objective\">\n            <p><i>To be played on Desktop or Tablet.</i></p>\n            <p>\n              Objective: Click a card to flip it over and click another to try to find its match. \n              Once you have found all pairs, you have won the game. You can also use the timer to \n              see how fast you can complete the game.\n            </p>\n            <input\n              type=\"text\"\n              value={inputName.name}\n              onChange={(e) => setInputName({ ...inputName, name: e.target.value })}\n              placeholder=\"Enter name\"\n              className=\"player-name\"\n            />\n            <Link to=\"/gamepage\">\n              <button className=\"homepage-button\">\n                <p className=\"button-font\">Submit</p>\n              </button>\n            </Link>\n          </div>\n        </div>\n      </Route>\n      <Route path=\"/gamepage\">\n        <Nav \n          name={inputName.name}\n          formattedTime={formattedTime}\n          isPaused={isPaused}\n          pauseTimer={pauseTimer}\n          resumeTimer={resumeTimer}\n          time={time}\n        />\n        <Board \n          startTimer={startTimer}\n          stopTimer={ stopTimer}\n          isGameStarted={isGameStarted}\n          setIsGameStarted={setIsGameStarted}\n          pauseTimer={pauseTimer}\n          isPaused={isPaused}\n          resumeTimer={resumeTimer}\n          setIsPaused={setIsPaused}\n          setTime={setTime}\n        />\n      </Route>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}