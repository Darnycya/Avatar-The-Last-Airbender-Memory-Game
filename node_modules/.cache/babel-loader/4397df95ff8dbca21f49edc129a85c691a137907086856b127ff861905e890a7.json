{"ast":null,"code":"var _jsxFileName = \"/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createElement as _createElement } from 'react';\nimport Card from '../Card/Card';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport './Board.css';\nimport Appa from '../../Assets/Images/Appa.png';\nimport Katara from '../../Assets/Images/Katara.jpeg';\nimport PrinceZuko from '../../Assets/Images/Prince_Zuko.jpg';\nimport Sokka from '../../Assets/Images/Sokka.png';\nimport Toph from '../../Assets/Images/Toph.jpg';\nimport Aang from '../../Assets/Images/Aang.jpg';\nimport backImg from '../../Assets/Images/Logo.jpg';\nimport Iroh_smiling from '../../Assets/Images/Iroh_smiling.png';\nimport Mai from '../../Assets/Images/Mai.png';\nimport momo from '../../Assets/Images/momo.jpg';\nimport Tylee from '../../Assets/Images/Tylee.png';\nimport Azulaa from '../../Assets/Images/Azulaa.png';\nimport Bumi from '../../Assets/Images/Bumi.jpeg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = props => {\n  _s();\n  const [cards, setCards] = useState(props.cards);\n  const [checkers, setCheckers] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  const onCardClick = card => () => {\n    if (!isTimerStarted) {\n      setIsTimerStarted(true); // Start the timer on the first click\n      props.startTimer(); // Call the timer's start function\n    }\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return;\n    const newCheckers = [...checkers, card];\n    setCheckers(newCheckers);\n    const cardsInCheckersMatched = validateCheckers(newCheckers);\n    console.log('checkersFull', checkersFull(newCheckers));\n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type]);\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000);\n    }\n    if (completed.length === 12) {\n      resetCompletedAfter(4000);\n      toggle();\n    }\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n        setCompleted([]);\n      }, time);\n    }\n    function validateCheckers(checkers) {\n      return checkers.length === 2 && checkers[0].type === checkers[1].type;\n    }\n    function cardAlreadyInCheckers(checkers, card) {\n      return checkers.length === 1 && checkers[0].id === card.id;\n    }\n    function checkersFull(checkers) {\n      return checkers.length === 2;\n    }\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([]);\n      }, time);\n    }\n  };\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped: checkers.find(c => c.id === card.id) || completed.includes(card.type)\n    }));\n    setCards(newCards);\n    // eslint-disable-next-line\n  }, [checkers, completed]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: cards.map(card => /*#__PURE__*/_createElement(Card, {\n        ...card,\n        onClick: onCardClick(card),\n        key: card.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isShowing: isShowing,\n        hide: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"oJJLdn889Cjs9h85eOrRuYPOi1w=\", false, function () {\n  return [useModal];\n});\n_c = Board;\nexport default Board;\n\n// Build Cards Function\nfunction buildCards() {\n  let id = 0;\n  const images = {\n    Aang,\n    Appa,\n    Katara,\n    PrinceZuko,\n    Sokka,\n    Toph,\n    Iroh_smiling,\n    Mai,\n    momo,\n    Tylee,\n    Azulaa,\n    Bumi\n  };\n  const cards = Object.keys(images).reduce((result, item) => {\n    const getCard = () => ({\n      id: id++,\n      type: item,\n      backImg,\n      frontImg: images[item],\n      flipped: false\n    });\n    return [...result, getCard(), getCard()];\n  }, []);\n  return shuffle(cards);\n}\n\n// Shuffle Function\nfunction shuffle(arr) {\n  let len = arr.length;\n  for (let i = 0; i < len; i++) {\n    let randomIdx = Math.floor(Math.random() * len);\n    let copyCurrent = {\n      ...arr[i]\n    };\n    let copyRandom = {\n      ...arr[randomIdx]\n    };\n    arr[i] = copyRandom;\n    arr[randomIdx] = copyCurrent;\n  }\n  return arr;\n}\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","createElement","_createElement","Card","Modal","useModal","Appa","Katara","PrinceZuko","Sokka","Toph","Aang","backImg","Iroh_smiling","Mai","momo","Tylee","Azulaa","Bumi","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","props","_s","cards","setCards","checkers","setCheckers","completed","setCompleted","isTimerStarted","setIsTimerStarted","isShowing","toggle","onCardClick","card","startTimer","checkersFull","cardAlreadyInCheckers","newCheckers","cardsInCheckersMatched","validateCheckers","console","log","type","resetCheckersAfter","length","resetCompletedAfter","time","setTimeout","id","useEffect","newCards","map","flipped","find","c","includes","children","className","onClick","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","hide","_c","buildCards","images","Object","keys","reduce","result","item","getCard","frontImg","shuffle","arr","len","i","randomIdx","Math","floor","random","copyCurrent","copyRandom","$RefreshReg$"],"sources":["/Users/darnycya/Desktop/Projects/Avatar-The-Last-Airbender-Memory-Game/src/Components/Board/Board.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Card from '../Card/Card';\nimport Modal from '../Modal/Modal';\nimport useModal from '../Modal/useModal';\nimport './Board.css';\nimport Appa from '../../Assets/Images/Appa.png';\nimport Katara from '../../Assets/Images/Katara.jpeg';\nimport PrinceZuko from '../../Assets/Images/Prince_Zuko.jpg';\nimport Sokka from '../../Assets/Images/Sokka.png';\nimport Toph from '../../Assets/Images/Toph.jpg';\nimport Aang from '../../Assets/Images/Aang.jpg';\nimport backImg from '../../Assets/Images/Logo.jpg';\nimport Iroh_smiling from '../../Assets/Images/Iroh_smiling.png';\nimport Mai from '../../Assets/Images/Mai.png';\nimport momo from '../../Assets/Images/momo.jpg';\nimport Tylee from '../../Assets/Images/Tylee.png';\nimport Azulaa from '../../Assets/Images/Azulaa.png';\nimport Bumi from '../../Assets/Images/Bumi.jpeg';\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards)\n  const [checkers, setCheckers] = useState([])\n  const [completed, setCompleted] = useState([])\n  const [isTimerStarted, setIsTimerStarted] = useState(false);\n  const { isShowing, toggle } = useModal();\n\n  const onCardClick = card => () => {\n    if (!isTimerStarted) {\n      setIsTimerStarted(true); // Start the timer on the first click\n      props.startTimer(); // Call the timer's start function\n    }\n\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card))\n      return\n    const newCheckers = [...checkers, card]\n    setCheckers(newCheckers)\n    const cardsInCheckersMatched = validateCheckers(newCheckers)\n    console.log('checkersFull', checkersFull(newCheckers))\n    \n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type])\n      \n    }\n\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000)\n    }\n \n    \n      if (completed.length === 12) {\n        resetCompletedAfter(4000)\n        toggle();\n      }\n    \n    \n\n    function resetCompletedAfter(time) {\n      setTimeout(() => {\n     setCompleted([])\n   }, time)\n    }\n    \n   \n\n    function validateCheckers(checkers){\n      return checkers.length === 2 &&\n      checkers[0].type === checkers[1].type\n    }\n\n    function cardAlreadyInCheckers(checkers, card){\n      return checkers.length === 1 && checkers[0].id === card.id\n    }\n\n    function checkersFull(checkers){\n      return checkers.length === 2\n    }\n\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([])\n      }, time)\n    }\n  }\n\n  \n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped:\n        checkers.find(c => c.id === card.id) ||\n        completed.includes(card.type),\n    }))\n    setCards(newCards)\n    // eslint-disable-next-line\n  }, [checkers, completed])\n  \n\n  \n  \n\n\n\n\n  return (\n    <>\n    <div className=\"Board\">\n      {cards.map(card => (\n        <Card {...card} onClick={onCardClick(card)} key={card.id} />\n      ))}\n      </div>\n\n      <div className=\"App\">\n      <Modal\n        isShowing={isShowing}\n        hide={toggle}\n      />\n      </div>\n      </>\n  )\n}\n\nexport default Board\n\n// Build Cards Function\nfunction buildCards() {\n  let id = 0;\n  const images = {\n    Aang, Appa, Katara, PrinceZuko,\n    Sokka, Toph, Iroh_smiling, Mai, momo, Tylee, Azulaa, Bumi,\n  };\n  const cards = Object.keys(images).reduce((result, item) => {\n    const getCard = () => ({\n      id: id++,\n      type: item,\n      backImg,\n      frontImg: images[item],\n      flipped: false,\n    });\n    return [...result, getCard(), getCard()];\n  }, []);\n  return shuffle(cards);\n}\n\n// Shuffle Function\nfunction shuffle(arr) {\n  let len = arr.length;\n  for (let i = 0; i < len; i++) {\n    let randomIdx = Math.floor(Math.random() * len);\n    let copyCurrent = { ...arr[i] };\n    let copyRandom = { ...arr[randomIdx] };\n    arr[i] = copyRandom;\n    arr[randomIdx] = copyCurrent;\n  }\n  return arr;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}