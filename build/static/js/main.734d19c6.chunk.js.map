{"version":3,"sources":["Assets/Images/Appa.png","Assets/Images/Katara.jpeg","Assets/Images/Prince_Zuko.jpg","Assets/Images/Sokka.png","Assets/Images/Toph.jpg","Assets/Images/Aang.jpg","Assets/Images/Logo.jpg","Components/HomePage/HomePage.js","Components/Card/Card.js","Components/Board/Board.js","Components/Main.js","App.js","index.js"],"names":["module","exports","HomePage","className","to","Component","Card","props","frontImg","backImg","flipped","onClick","img","src","alt","Board","useState","cards","setCards","checkers","setCheckers","completed","setCompleted","onCardClick","card","checkersFull","length","id","cardAlreadyInCheckers","newCheckers","type","validateCheckers","setTimeout","useEffect","newCards","map","find","c","includes","key","Main","images","Aang","Appa","Katara","PrinceZuko","Sokka","Toph","arr","len","i","randomIdx","Math","floor","random","copyCurrent","copyRandom","suffle","Object","keys","reduce","result","item","getCard","buildCards","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.734d19c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Appa.22d0c65f.png\";","module.exports = __webpack_public_path__ + \"static/media/Katara.d7cab815.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Prince_Zuko.b77e4915.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sokka.95d52468.png\";","module.exports = __webpack_public_path__ + \"static/media/Toph.5d90638a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Aang.8445144e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.022283b3.jpg\";","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './HomePage.css'\n\n\nclass HomePage extends Component {\n \n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>Welcome to Avatar: The Last Airbender Memory Game</h1>\n        <p> Objective: Click a card to flip it over and try to find it's match. Once you have found all pairs you have won the game. Press Enter to begin.</p>\n        \n        <Link to=\"/gamepage\"><button>Enter</button></Link>\n      </div>\n    )\n  }\n}\nexport default HomePage;\n","import React from 'react'\nimport './Card.css'\n\nconst Card = props => {\n  const {frontImg, backImg, flipped, onClick} = props\n  const img = flipped ? frontImg : backImg\n  return (\n    <div className=\"Card\" onClick={onClick}>\n      <img src={img} alt=\"\"/>\n    </div>\n  )\n}\n\nexport default Card","import React, {useState, useEffect} from 'react'\nimport Card from '../Card/Card'\nimport './Board.css'\n\nconst Board = props => {\n  const [cards, setCards] = useState(props.cards)\n  const [checkers, setCheckers] = useState([])\n  const [completed, setCompleted] = useState([])\n  const onCardClick = card => () => {\n    if (checkersFull(checkers) || cardAlreadyInCheckers(checkers, card)) return\n    const newCheckers = [...checkers, card]\n    setCheckers(newCheckers)\n    const cardsInCheckersMatched = validateCheckers(newCheckers)\n    if (cardsInCheckersMatched) {\n      setCompleted([...completed, newCheckers[0].type])\n    }\n    if (checkersFull(newCheckers)) {\n      resetCheckersAfter(1000)\n    }\n    function validateCheckers(checkers){\n      return checkers.length === 2 &&\n      checkers[0].type === checkers[1].type\n    }\n    function cardAlreadyInCheckers(checkers, card){\n      return checkers.length === 1 && checkers[0].id === card.id\n    }\n    function checkersFull(checkers){\n      return checkers.length === 2\n    }\n    function resetCheckersAfter(time) {\n      setTimeout(() => {\n        setCheckers([])\n      }, time)\n    }\n  }\n\n  useEffect(() => {\n    const newCards = cards.map(card => ({\n      ...card,\n      flipped:\n        checkers.find(c => c.id === card.id) ||\n        completed.includes(card.type),\n    }))\n    setCards(newCards)\n  }, [checkers, completed])\n\n  return (\n    <div className=\"Board\">\n      {cards.map(card => (\n        <Card {...card} onClick={onCardClick(card)} key={card.id} />\n      ))}\n    </div>\n  )\n}\n\nexport default Board","import React from 'react'\nimport Board from '../Components/Board/Board'\nimport Appa from '../Assets/Images/Appa.png'\nimport Katara from '../Assets/Images/Katara.jpeg'\nimport PrinceZuko from '../Assets/Images/Prince_Zuko.jpg'\nimport Sokka from '../Assets/Images/Sokka.png'\nimport Toph from '../Assets/Images/Toph.jpg'\nimport Aang from '../Assets/Images/Aang.jpg'\nimport backImg from '../Assets/Images/Logo.jpg'\n\n\nfunction Main() {\n  const cards = buildCards()\n  return (\n    <div className=\"App\">\n      <Board cards={cards} />\n    </div>\n  )\n}\n\nexport default Main\n\nfunction buildCards() {\n  let id = 0\n  const images = {Aang, Appa, Katara, PrinceZuko, Sokka, Toph}\n  const cards = Object.keys(images).reduce((result, item) => {\n    const getCard = () => ({\n      id: id++,\n      type: item,\n      backImg,\n      frontImg: images[item],\n      flipped: false,\n    })\n    return [...result, getCard(), getCard()]\n  }, [])\n  return suffle(cards)\n}\n\nfunction suffle(arr) {\n  let len = arr.length\n  for (let i = 0; i < len; i++) {\n    let randomIdx = Math.floor(Math.random() * len)\n    let copyCurrent = {...arr[i]}\n    let copyRandom = {...arr[randomIdx]}\n    arr[i] = copyRandom\n    arr[randomIdx] = copyCurrent\n  }\n  return arr\n}","import React from 'react'\nimport { Route } from \"react-router-dom\"\nimport HomePage from \"./Components/HomePage/HomePage\"\nimport Main from \"./Components/Main\"\n\n\n\nfunction App() {\n  return (\n    <>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/gamepage\">\n        <Main />\n      </Route>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}